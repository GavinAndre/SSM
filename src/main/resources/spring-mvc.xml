<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.java.gavinandre.controller"/>

    <mvc:resources location="/js/" mapping="/js/**"/>

    <!--mvc的注解驱动器，通过它可以替代下边的处理器映射器和适配器-->
    <!--<mvc:annotation-driven></mvc:annotation-driven>-->

    <!--注解处理器映射器-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <!--注解的适配器-->
    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
            p:ignoreDefaultModelOnRedirect="true">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>    <!-- JSON转换器 -->
            </list>
        </property>
        <property name="webBindingInitializer" ref="customBinder"/>   <!--属性编辑器-->
    </bean>

    <!--配置视图解析器
    要求将jstl的包加到classpath
    prefix:代表请求url的前缀
    suffix:代表请求url的后缀
    设置了这两个属性值后我们在Controller中进行代码开发时返回的modelandview对象设置的页面路径值就不用带前缀名和后缀名了-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
    <!--class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">-->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <!--<property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>-->
    </bean>

    <!-- 自定义webBinder -->
    <bean id="customBinder"
          class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <property name="conversionService" ref="conversionService"/>
        <!--早期的自定义属性编辑器-->
        <!--<property name="propertyEditorRegistrars">
            <list>
                <ref bean="customPropertyEditor"/>
            </list>
        </property>-->
        <property name="validator" ref="validator"/>
    </bean>

    <!--定义统一异常处理器-->
    <bean class="com.java.gavinandre.exception.CustomExceptionResolver"/>

    <!-- 注册属性编辑器 -->
    <bean id="customPropertyEditor" class="com.java.gavinandre.controller.propertyeditor.CustomPropertyEditor"/>

    <!--转换器-->
    <!-- conversionService -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 转换器 -->
        <property name="converters">
            <set>
                <bean class="com.java.gavinandre.controller.converter.CustomDateConverter"/>
                <bean class="com.java.gavinandre.controller.converter.StringTrimConverter"/>
            </set>
        </property>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不指定则默认使用classpath下的ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <!-- 校验错误信息配置文件 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:CustomValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <!-- 资源文件编码格式 -->
        <property name="fileEncodings">
            <props>
                <prop key="classpath:CustomValidationMessages">UTF-8</prop>
            </props>
        </property>
        <property name="cacheSeconds" value="120"/>
    </bean>

</beans>